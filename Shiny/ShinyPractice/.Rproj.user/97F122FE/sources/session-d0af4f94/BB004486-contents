#Catalina
# This script is for practicing geocomputation. 
#Last edited: 2/5

library(tidyverse)
library(sf)
library(leaflet)


# Load Data -------------------------------

#function to read in data and transform into a consistent crs
read_data <- function(folder) {
  read_sf(folder) %>% 
    st_transform(crs = '+proj=longlat +datum=WGS84')
}

#Polygon of the Snohomish Delta
SnoDelta <- read_data("data/SnoDelta")

#Cedar Grove Mitigation project footprint
cedar_grove <- read_data("data/CedarGroveMitigation")

#Current Habitat Conditions
outlets <- read_data("data/current_outlets_SNO")
current_hab <- read_data("data/current_hab_SNO")

#Historic Habitat
Hveg <- read_data("data/Historic_Veg")

#Tidal Connectivity
Tconnect <- read_data("data/Connectivity")



# Manipulate Data -------------------------

#calculate the current habitat area

#Fix value for new mitigation bank
Tconnect$Feat_Tidal[Tconnect$fid_ == 3086] <- "Unrestricted"

#Remove the two polygons that were mislabeled
Tconnect$Feat_Tidal[Tconnect$fid_ == 2965] <- "Mislabeled"
Tconnect$Feat_Tidal[Tconnect$fid_ == 3218] <- "Mislabeled"

#simplify the data frame down to just unrestricted and partially restricted wetlands
wetlands <- Tconnect %>% 
  select(fid_, Feat_Tidal, TidalFeat_) %>% 
  filter(Feat_Tidal == "Unrestricted" | Feat_Tidal == "Partial") %>% 
  filter(TidalFeat_ == "Wetland")

#Simplify data
Hveg <- Hveg %>% 
  distinct(Veg, geometry)

#Troubleshooting issues with spherical geometries
st_is_valid(wetlands)
wetlands <- st_make_valid(wetlands)

st_is_valid(Hveg)
Hveg <- st_make_valid(Hveg)
  
test <- st_intersection(wetlands, Hveg)

test <- st_boundary(wetlands)
test <- st_union(test)
test <- st_intersection(x=cedar_grove, y=SnoDelta)
constituencies_wgs$intersects <- as.character(st_intersects(constituencies_wgs, polygon))

channels <- st_intersection(x = current_hab, y = cedar_grove)

#Calculating historic area of 3 habitat types
sf::sf_use_s2(TRUE)
Hveg<-Hveg %>% 
  distinct(Veg)
st_area(cedar_grove)


test <- st_intersection(current_hab, SnoDelta)

leaflet() %>%
  addProviderTiles(providers$Esri.WorldImagery,
                   group = "Satellite") %>% 
  setView(lng =-122.214, lat = 48.024, zoom = 10) %>% 
  
  #User uploaded footprint
  addPolygons(data = test)

Present <- sum(st_area(test))

Historic <- sum(st_area(Hveg))

Present/Historic



