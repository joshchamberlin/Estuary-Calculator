geom_bar(stat = "identity")
#remove shore from historic veg
Hveg <- Hveg %>%
filter(Veg != "Shore")
#Calculate Habitat Areas -------------------
Hveg_area <- Hveg %>%
mutate(area = st_area(geometry)) %>%
group_by(Veg) %>%
summarise(Historic = sum(area)) %>%
st_drop_geometry()
#Match current with historic habitat
wetlands <- st_intersection(wetlands, Hveg)
Cveg_area <- wetlands %>%
mutate(area = st_area(geometry)) %>%
group_by(Veg) %>%
summarise(Current = sum(area)) %>%
st_drop_geometry()
veg_areas <- merge(Hveg_area, Cveg_area) %>%
pivot_longer(cols = c(2,3), names_to = "type", values_to = "area")
#Plot change in habitat
ggplot(veg_areas, aes(x = Veg, y = area, fill = type)) +
geom_bar(stat = "identity")
ggplot()+
geom_sf(data = Hveg_area, aes(fill = Veg))
ggplot()+
geom_sf(data = test, aes(fill = Veg))
ggplot()+
geom_sf(data = wetlands, aes(fill = Veg))
ggplot()+
geom_sf(data = wetlands, aes(fill = Veg))
#remove shore from historic veg
Hveg <- Hveg %>%
filter(Veg != "Shore")
unique(Hveg$Veg)
#Calculate Habitat Areas -------------------
Hveg_area <- Hveg %>%
mutate(area = st_area(geometry)) %>%
group_by(Veg) %>%
summarise(Historic = sum(area)) %>%
st_drop_geometry()
#Match current with historic habitat
wetlands <- st_intersection(wetlands, Hveg)
unique(wetlands$Veg)
#simplify the data frame down to just unrestricted and partially restricted wetlands
wetlands <- Tconnect %>%
select(fid_, Feat_Tidal, TidalFeat_) %>%
filter(Feat_Tidal == "Unrestricted" | Feat_Tidal == "Partial") %>%
filter(TidalFeat_ == "Wetland")
#remove shore from historic veg
Hveg <- Hveg %>%
filter(Veg != "Shore")
#Calculate Habitat Areas -------------------
Hveg_area <- Hveg %>%
mutate(area = st_area(geometry)) %>%
group_by(Veg) %>%
summarise(Historic = sum(area)) %>%
st_drop_geometry()
#Match current with historic habitat
wetlands <- st_intersection(wetlands, Hveg)
Cveg_area <- wetlands %>%
mutate(area = st_area(geometry)) %>%
group_by(Veg) %>%
summarise(Current = sum(area)) %>%
st_drop_geometry()
veg_areas <- merge(Hveg_area, Cveg_area) %>%
pivot_longer(cols = c(2,3), names_to = "type", values_to = "area")
#Plot change in habitat
ggplot(veg_areas, aes(x = Veg, y = area, fill = type)) +
geom_bar(stat = "identity")
ggplot()+
geom_sf(data = wetlands, aes(fill = Veg))
#Plot change in habitat
ggplot(veg_areas, aes(x = Veg, y = area, fill = type)) +
geom_bar(stat = "identity")
ggplot()+
geom_bar(Cveg_area, aes(x = Veg, y = area))
ggplot()+
geom_bar(Cveg_area, aes(x = Veg, y = area))
ggplot()+
geom_bar(Cveg_area, aes(x = Veg, y = area))
ggplot()+
geom_bar(data = Cveg_area, aes(x = Veg, y = area))
ggplot()+
geom_bar(data = Cveg_area, aes(x = Veg, y = Current))
ggplot()+
geom_col(data = Cveg_area, aes(x = Veg, y = Current))
ggplot()+
geom_col(data = Cveg_area, aes(x = Veg, y = Current))+
geom_col(data = Cveg_area, aes(x = Veg, y = Historic))
ggplot()+
geom_col(data = Cveg_area, aes(x = Veg, y = Current))+
geom_col(data = Hveg_area, aes(x = Veg, y = Historic))
ggplot()+
geom_col(data = Cveg_area, aes(x = Veg, y = Current))+
geom_col(data = Hveg_area, aes(x = Veg, y = Historic), color = "red")
ggplot()+
geom_col(data = Cveg_area, aes(x = Veg, y = Current))+
geom_col(data = Hveg_area, aes(x = Veg, y = Historic), fill = "red")
ggplot()+
geom_col(data = Cveg_area, aes(x = Veg, y = Current), fill = "blue")+
geom_col(data = Hveg_area, aes(x = Veg, y = Historic), fill = "red")
ggplot()+
geom_col(data = Hveg_area, aes(x = Veg, y = Historic), fill = "red")+
geom_col(data = Cveg_area, aes(x = Veg, y = Current), fill = "blue")
#Calculate Habitat Areas -------------------
Hveg_area <- Hveg %>%
mutate(area = st_area(geometry)) %>%
group_by(Veg) %>%
summarise(Area = sum(area)) %>%
st_drop_geometry()
#Match current with historic habitat
wetlands <- st_intersection(wetlands, Hveg)
Cveg_area <- wetlands %>%
mutate(area = st_area(geometry)) %>%
group_by(Veg) %>%
summarise(Area = sum(area)) %>%
st_drop_geometry()
ggplot()+
geom_col(data = Hveg_area, aes(x = Veg, y = Historic), fill = "red")+
geom_col(data = Cveg_area, aes(x = Veg, y = Current), fill = "blue")
ggplot()+
geom_col(data = Hveg_area, aes(x = Veg, y = Area), fill = "red")+
geom_col(data = Cveg_area, aes(x = Veg, y = Area), fill = "blue")
Cveg_area <- wetlands %>%
mutate(area = st_area(geometry, set_units = "m")) %>%
group_by(Veg) %>%
summarise(Area = sum(area)) %>%
st_drop_geometry()
Cveg_area <- wetlands %>%
mutate(area = st_area(geometry, set_units = "km")) %>%
group_by(Veg) %>%
summarise(Area = sum(area)) %>%
st_drop_geometry()
View(Cveg_area)
Cveg_area <- wetlands %>%
mutate(area = st_area(geometry, set_units = "acre")) %>%
group_by(Veg) %>%
summarise(Area = sum(area)) %>%
st_drop_geometry()
Cveg_area <- wetlands %>%
mutate(area = st_area(geometry)) %>%
group_by(Veg) %>%
summarise(Area = sum(area)) %>%
st_drop_geometry()
#Calculate Habitat Areas -------------------
Hveg_area <- Hveg %>%
mutate(area = st_area(geometry)) %>%
group_by(Veg) %>%
summarise(Area = sum(area)) %>%
st_drop_geometry() %>%
mutate(Area = set_units(Area, acres^2))
#Calculate Habitat Areas -------------------
Hveg_area <- Hveg %>%
mutate(area = st_area(geometry)) %>%
group_by(Veg) %>%
summarise(Area = sum(area)) %>%
st_drop_geometry() %>%
mutate(Area = set_units(Area, km^2))
View(Hveg_area)
#Calculate Habitat Areas -------------------
Hveg_area <- Hveg %>%
mutate(area = st_area(geometry)) %>%
group_by(Veg) %>%
summarise(Area = sum(area)) %>%
st_drop_geometry() %>%
mutate(Area = set_units(Area, acre^2))
#Calculate Habitat Areas -------------------
Hveg_area <- Hveg %>%
mutate(area = st_area(geometry)) %>%
group_by(Veg) %>%
summarise(Area = sum(area)) %>%
st_drop_geometry() %>%
mutate(Area = set_units(Area, km^2))
#Match current with historic habitat
wetlands <- st_intersection(wetlands, Hveg)
Cveg_area <- wetlands %>%
mutate(area = st_area(geometry)) %>%
group_by(Veg) %>%
summarise(Area = sum(area)) %>%
st_drop_geometry() %>%
mutate(Area = set_units(Area, km^2))
#Plot change in habitat
ggplot(veg_areas, aes(x = Veg, y = area, fill = type)) +
geom_bar(stat = "identity")
ggplot()+
geom_col(data = Hveg_area, aes(x = Veg, y = Area), fill = "red")+
geom_col(data = Cveg_area, aes(x = Veg, y = Area), fill = "blue")
ggplot()+
geom_col(data = Hveg_area, aes(x = Veg, y = Area), fill = "lightblue")+
geom_col(data = Cveg_area, aes(x = Veg, y = Area), fill = "darkblue")
ggplot()+
geom_col(data = Hveg_area, aes(x = Veg, y = Area), fill = "lightblue")+
geom_col(data = Cveg_area, aes(x = Veg, y = Area), fill = "darkblue") +
theme_classic()
ggplot()+
geom_col(data = Hveg_area, aes(x = Veg, y = Area), fill = "lightblue")+
geom_col(data = Cveg_area, aes(x = Veg, y = Area), fill = "darkblue") +
theme_classic() +
labs(x = "Habitat Type")
ggplot()+
geom_col(data = Hveg_area, aes(x = Veg, y = Area), fill = "lightblue")+
geom_col(data = Cveg_area, aes(x = Veg, y = Area), fill = "darkblue") +
theme_classic() +
scale_x_discrete(expand = c(0,0))
ggplot()+
geom_col(data = Hveg_area, aes(x = Veg, y = Area), fill = "lightblue")+
geom_col(data = Cveg_area, aes(x = Veg, y = Area), fill = "darkblue") +
theme_classic() +
scale_x_discrete(expand = c(0,0))+
scale_y_continuous(expand = c(0,0))
ggplot()+
geom_col(data = Hveg_area, aes(x = Veg, y = Area), fill = "lightblue")+
geom_col(data = Cveg_area, aes(x = Veg, y = Area), fill = "darkblue") +
theme_classic() +
scale_x_discrete(expand = c(0,0))+
scale_y_continuous(expand = c(0,0)) +
labs(x = "Habitat Type")
ggplot()+
geom_col(data = Hveg_area, aes(x = Veg, y = Area), fill = "lightblue")+
geom_col(data = Cveg_area, aes(x = Veg, y = Area), fill = "darkblue") +
theme_classic() +
scale_x_discrete(expand = c(0,0))+
scale_y_units(expand = c(0,0)) +
labs(x = "Habitat Type")
ggplot()+
geom_col(data = Hveg_area, aes(x = Veg, y = Area), fill = "lightblue")+
geom_col(data = Cveg_area, aes(x = Veg, y = Area), fill = "darkblue") +
theme_classic() +
scale_x_discrete(expand = c(0,0))+
scale_y_units(expand = c(0,0)) +
labs(x = "Habitat Type", title = "Historic to Present Change in Habitat")
ggplot()+
geom_col(data = Hveg_area, aes(x = Veg, y = Area), fill = "lightblue")+
geom_col(data = Cveg_area, aes(x = Veg, y = Area), fill = "darkblue") +
theme_classic() +
scale_x_discrete(expand = c(0,0))+
scale_y_units(expand = c(0,0)) +
labs(x = "Habitat Type", title = "Change in Habitat from Historic to Present")
ggplot()+
geom_col(data = Hveg_area, aes(x = Veg, y = Area), fill = "lightblue")+
geom_col(data = Cveg_area, aes(x = Veg, y = Area), fill = "darkblue") +
theme_classic() +
scale_x_discrete(expand = c(0,0))+
scale_y_units(expand = c(0,0)) +
labs(x = "Habitat Type", title = "Change in Habitat from Historic to Present")+
scale_color_manual(name = "Time",
breaks = c("Historic", "Current"),
values = c("Historic" = "lightblue", "Current = "darkblue))
ggplot()+
geom_col(data = Hveg_area, aes(x = Veg, y = Area), fill = "lightblue")+
geom_col(data = Cveg_area, aes(x = Veg, y = Area), fill = "darkblue") +
theme_classic() +
scale_x_discrete(expand = c(0,0))+
scale_y_units(expand = c(0,0)) +
labs(x = "Habitat Type", title = "Change in Habitat from Historic to Present")+
scale_color_manual(name = "Time",
breaks = c("Historic", "Current"),
values = c("Historic" = "lightblue", "Current = "darkblue""))
ggplot()+
geom_col(data = Hveg_area, aes(x = Veg, y = Area), fill = "lightblue")+
geom_col(data = Cveg_area, aes(x = Veg, y = Area), fill = "darkblue") +
theme_classic() +
scale_x_discrete(expand = c(0,0))+
scale_y_units(expand = c(0,0)) +
labs(x = "Habitat Type", title = "Change in Habitat from Historic to Present")+
scale_color_manual(name = "Time",
breaks = c("Historic", "Current"),
values = c("Historic" = "lightblue", "Current" = "darkblue"))
ggplot()+
geom_col(data = Hveg_area, aes(x = Veg, y = Area, color = "Historic"), fill = "lightblue")+
geom_col(data = Cveg_area, aes(x = Veg, y = Area, color = "Current"), fill = "darkblue") +
theme_classic() +
scale_x_discrete(expand = c(0,0))+
scale_y_units(expand = c(0,0)) +
labs(x = "Habitat Type", title = "Change in Habitat from Historic to Present")+
scale_color_manual(name = "Time",
breaks = c("Historic", "Current"),
values = c("Historic" = "lightblue", "Current" = "darkblue"))
ggplot()+
geom_col(data = Hveg_area, aes(x = Veg, y = Area, color = "Historic"), fill = "lightblue")+
geom_col(data = Cveg_area, aes(x = Veg, y = Area, color = "Current"), fill = "darkblue") +
theme_classic() +
scale_x_discrete(expand = c(0,0))+
scale_y_units(expand = c(0,0)) +
labs(x = "Habitat Type", title = "Change in Habitat from Historic to Present")+
scale_color_manual(breaks = c("Historic", "Current"),
values = c("Historic" = "lightblue", "Current" = "darkblue"))
ggplot()+
geom_col(data = Hveg_area, aes(x = Veg, y = Area, color = "Historic"), fill = "lightblue")+
geom_col(data = Cveg_area, aes(x = Veg, y = Area, color = "Current"), fill = "darkblue") +
theme_classic() +
scale_x_discrete(expand = c(0,0))+
scale_y_units(expand = c(0,0)) +
labs(x = "Habitat Type", title = "Change in Habitat from Historic to Present")+
scale_color_manual(name = "Period",
breaks = c("Historic", "Current"),
values = c("Historic" = "lightblue", "Current" = "darkblue"))
ggplot()+
geom_col(data = Hveg_area, aes(x = Veg, y = Area, color = "Historic"), fill = "lightblue")+
geom_col(data = Cveg_area, aes(x = Veg, y = Area, color = "Current"), fill = "darkblue") +
theme_classic() +
scale_x_discrete(expand = c(0,0))+
scale_y_units(expand = c(0,0), breaks = c(0,5,10,15,20,25,30)) +
labs(x = "Habitat Type", title = "Change in Habitat from Historic to Present")+
scale_color_manual(name = "Period",
breaks = c("Historic", "Current"),
values = c("Historic" = "lightblue", "Current" = "darkblue"))
habitat_change_plot <- ggplot()+
geom_col(data = Hveg_area, aes(x = Veg, y = Area, color = "Historic"), fill = "lightblue")+
geom_col(data = Cveg_area, aes(x = Veg, y = Area, color = "Current"), fill = "darkblue") +
theme_classic() +
scale_x_discrete(expand = c(0,0))+
scale_y_units(expand = c(0,0), breaks = c(0,5,10,15,20,25,30)) +
labs(x = "Habitat Type", title = "Change in Habitat from Historic to Present")+
scale_color_manual(name = "Period",
breaks = c("Historic", "Current"),
values = c("Historic" = "lightblue", "Current" = "darkblue"))
source(past(getwd(), "/code/vegetation.R", sep = ""))
source(paste(getwd(), "/code/vegetation.R", sep = ""))
runApp()
#Create interactive map that shows change in habitat condition
leaflet() %>%
addPolygons(data = wetlands) %>%
addPolygons()
#Create interactive map that shows change in habitat condition
leaflet() %>%
addPolygons(data = wetlands %>% st_transform(crs = '+proj=longlat +datum=WGS84'))
#Create interactive map that shows change in habitat condition
leaflet() %>%
addTiles() %>%
addPolygons(data = wetlands %>% st_transform(crs = '+proj=longlat +datum=WGS84'))
#Create interactive map that shows change in habitat condition
leaflet() %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Satellite") %>%
addPolygons(data = wetlands %>% st_transform(crs = '+proj=longlat +datum=WGS84'))
#Create interactive map that shows change in habitat condition
leaflet() %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Satellite") %>%
addPolygons(data = wetlands %>% st_transform(crs = '+proj=longlat +datum=WGS84'), fill = Veg)
View(wetlands)
#Create interactive map that shows change in habitat condition
leaflet() %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Satellite") %>%
addPolygons(data = wetlands %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
color = Veg,
group = "Current Habitat")
#Create interactive map that shows change in habitat condition
leaflet() %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Satellite") %>%
addPolygons(data = wetlands %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Current Habitat")
#Create interactive map that shows change in habitat condition
leaflet() %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Satellite") %>%
addPolygons(data = wetlands %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Current Habitat") %>%
addLayersControl(overlayGroups = "Current Habitat")
#Create interactive map that shows change in habitat condition
leaflet() %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Satellite") %>%
addPolygons(data = wetlands %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Current Habitat") %>%
addPolygons(data = Hveg %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Historic Habitat") %>%
addLayersControl(overlayGroups = c("Current Habitat", "Historic Habitat"))
ggplot()+
geom_sf(data = Hveg, aes(fill = Veg))
#Create interactive map that shows change in habitat condition
leaflet() %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Satellite") %>%
addPolygons(data = wetlands %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Current Habitat") %>%
addPolygons(data = Hveg %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Historic Habitat") %>%
addLayersControl(overlayGroups = c("Current Habitat", "Historic Habitat"))
#Create interactive map that shows change in habitat condition
#Color Palette
pal <- colorNumeric(
palette = "Blues",
domain = Hveg$Veg)
#Create interactive map that shows change in habitat condition
#Color Palette
pal <- colorFactor(
palette = "Blues",
domain = Hveg$Veg)
leaflet() %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Satellite") %>%
addPolygons(data = wetlands %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Current Habitat",
color = ~pal(Veg)) %>%
addPolygons(data = Hveg %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Historic Habitat") %>%
addLayersControl(overlayGroups = c("Current Habitat", "Historic Habitat"))
leaflet() %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Satellite") %>%
addPolygons(data = wetlands %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Current Habitat",
color = ~pal(Veg)) %>%
addPolygons(data = Hveg %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Historic Habitat",
color = ~pal(Veg)) %>%
addLayersControl(overlayGroups = c("Current Habitat", "Historic Habitat"))
leaflet() %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Satellite") %>%
addPolygons(data = wetlands %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Current Habitat",
color = ~pal(Veg)) %>%
addPolygons(data = Hveg %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Historic Habitat",
fill = ~pal(Veg)) %>%
addLayersControl(overlayGroups = c("Current Habitat", "Historic Habitat"))
leaflet() %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Satellite") %>%
addPolygons(data = wetlands %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Current Habitat",
color = ~pal(Veg)) %>%
addPolygons(data = Hveg %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Historic Habitat",
color = ~pal(Veg)) %>%
addLayersControl(overlayGroups = c("Current Habitat", "Historic Habitat"))
leaflet() %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Satellite") %>%
addPolygons(data = wetlands %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Current Habitat",
color = ~pal(Veg)) %>%
addPolygons(data = Hveg %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Historic Habitat",
color = ~pal(Veg), fillOpacity = 1) %>%
addLayersControl(overlayGroups = c("Current Habitat", "Historic Habitat"))
leaflet() %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Satellite") %>%
addPolygons(data = wetlands %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Current Habitat",
color = ~pal(Veg), fillOpacity = 1) %>%
addPolygons(data = Hveg %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Historic Habitat",
color = ~pal(Veg), fillOpacity = 1) %>%
addLayersControl(overlayGroups = c("Current Habitat", "Historic Habitat"))
leaflet() %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Satellite") %>%
addPolygons(data = wetlands %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Current Habitat",
color = ~pal(Veg), fillOpacity = 1) %>%
addPolygons(data = Hveg %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Historic Habitat",
color = ~pal(Veg), fillOpacity = 1, stroke = F) %>%
addLayersControl(overlayGroups = c("Current Habitat", "Historic Habitat"))
leaflet() %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Satellite") %>%
addPolygons(data = wetlands %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Current Habitat",
color = ~pal(Veg), fillOpacity = 1, stroke = F) %>%
addPolygons(data = Hveg %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Historic Habitat",
color = ~pal(Veg), fillOpacity = 1, stroke = F) %>%
addLayersControl(overlayGroups = c("Current Habitat", "Historic Habitat"))
habitat_change_leaflet <- leaflet() %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Satellite") %>%
addPolygons(data = wetlands %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Current Habitat",
color = ~pal(Veg), fillOpacity = 1, stroke = F) %>%
addPolygons(data = Hveg %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Historic Habitat",
color = ~pal(Veg), fillOpacity = 1, stroke = F) %>%
addLayersControl(overlayGroups = c("Current Habitat", "Historic Habitat"))
runApp()
habitat_change_leaflet <- leaflet() %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Satellite") %>%
addPolygons(data = wetlands %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Current Habitat",
color = ~pal(Veg), fillOpacity = 1, stroke = F) %>%
addPolygons(data = Hveg %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Historic Habitat",
color = ~pal(Veg), fillOpacity = 1, stroke = F,
popup = ~Veg) %>%
addLayersControl(overlayGroups = c("Current Habitat", "Historic Habitat"))
runApp()
View(wetlands)
#Create interactive map that shows change in habitat condition
#Color Palette
pal <- colorFactor(
palette = "Greens",
domain = Hveg$Veg)
habitat_change_leaflet <- leaflet() %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Satellite") %>%
addPolygons(data = wetlands %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Current Habitat",
color = ~pal(Veg), fillOpacity = 1, stroke = F) %>%
addPolygons(data = Hveg %>% st_transform(crs = '+proj=longlat +datum=WGS84'),
group = "Historic Habitat",
color = ~pal(Veg), fillOpacity = 1, stroke = F) %>%
addLayersControl(overlayGroups = c("Current Habitat", "Historic Habitat"))
ggplot()+
geom_sf(data = Hveg, aes(fill = Veg))
