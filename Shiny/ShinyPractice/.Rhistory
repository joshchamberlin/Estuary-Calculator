SnoDelta <- read_sf("data/ProjectFootprints_SNO.shp")
# Load packages -------------------------
library(shiny)
library(tidyverse)
library(maps)
library(sf)
library(readxl)
library(leaflet)
library(RColorBrewer)
library(bslib) #UI themes
options(shiny.maxRequestSize = 30*1024^2) #increase the file upload size to 30MB
# Load Data -------------------------------
SnoDelta <- read_sf("data/SnoDelta.shp")
st_crs(SnoDelta)
SnoDelta <- read_sf("data/ProjectFootprints_SNO.shp")
Restoration <- read_sf("data/ProjectFootprints_SNO.shp")
# Load Data -------------------------------
SnoDelta <- read_sf("data/SnoDelta.shp")
st_crs(SnoDelta)
# Load Data -------------------------------
delta <- read_sf("data/SnoDelta.shp")
restoration <- read_sf("data/ProjectFootprints_SNO.shp")
outlets <- read_sf("data/tc_dist_outlets_SNO.shp")
current_hab <- read_sf("data/update_SNO.shp")
delta <- st_transform(delta, crs = '+proj=longlat +datum=WGS84')
) %>%
map <-leaflet() %>%
addTiles(group = "Street") %>% #basemap
addProviderTiles(providers$Esri.WorldImagery,
group = "Satellite") %>% #satelite base map
setView(lng =-122.214, lat = 48.024, zoom = 10) %>%
addPolygons(data = delta,
popup = "Snohomish Delta", group = "Snohomish Delta") %>%
addPolygons(data = restoration) %>%
addLayersControl(baseGroups = c("Satelite", "Street"),
overlayGroups = c("Snohomish Delta"),
options = layersControlOptions(collapsed = F)) %>%
addScaleBar()
runApp()
runApp()
runApp()
runApp()
library(shinydashboard)
runApp()
?icon
runApp()
runApp()
runApp()
head(restoration)
runApp()
runApp()
runApp()
install.packages("rgdal")
library(rgdal) #for reactive map file upload
install.packages("rgdal", type="source")
install.packages("Rtools")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/Catalina.Burch/AppData/Local/Temp/db3a0488-31c3-4772-9e4d-77001d671b7b_Country-Viewer-Shiny-App-main.zip.b7b/Country-Viewer-Shiny-App-main/countries_viewer.R')
runApp('C:/Users/Catalina.Burch/AppData/Local/Temp/db3a0488-31c3-4772-9e4d-77001d671b7b_Country-Viewer-Shiny-App-main.zip.b7b/Country-Viewer-Shiny-App-main/countries_viewer.R')
delta <- st_transform(delta, crs = '+proj=longlat +datum=WGS84')
map <-leaflet() %>%
addTiles(group = "Street") %>% #basemap
addProviderTiles(providers$Esri.WorldImagery,
group = "Satellite") %>% #satelite base map
setView(lng =-122.214, lat = 48.024, zoom = 10) %>%
addPolygons(data = delta,
popup = "Snohomish Delta", group = "Snohomish Delta") %>%
addPolygons(data = restoration) %>%
addLayersControl(baseGroups = c("Satelite", "Street"),
overlayGroups = c("Snohomish Delta"),
options = layersControlOptions(collapsed = F)) %>%
addScaleBar()
map
map <-leaflet() %>%
addTiles(group = "Street") %>% #basemap
addProviderTiles(providers$Esri.WorldImagery,
group = "Satellite") %>% #satelite base map
setView(lng =-122.214, lat = 48.024, zoom = 10) %>%
addPolygons(data = delta,
popup = "Snohomish Delta", group = "Snohomish Delta") %>%
addLayersControl(baseGroups = c("Satelite", "Street"),
overlayGroups = c("Snohomish Delta"),
options = layersControlOptions(collapsed = F)) %>%
addScaleBar()
map
leaflet() %>%
addTiles() %>% #basemap
setView(lng =-122.214, lat = 48.024, zoom = 10) %>%
addPolygons(data = user_shp)
leaflet() %>%
addTiles() %>% #basemap
setView(lng =-122.214, lat = 48.024, zoom = 10) %>%
addPolygons(data = delta)
runApp()
runApp()
runApp()
?dirname
runApp()
runApp()
runApp()
load("C:/Users/Catalina.Burch/Documents/SampleCode/SpatialMappingClass/R/.RData")
shiny::runApp()
runApp()
