summary(gam.5.1$gam) #
anova(gam.5.1$lme)
plot(gam.5.1$gam, pages=1, res=TRUE, scale=0, se=T, pch=1, shade=T)
par(mfrow=(c(1,1)))
plot(fitted(gam.5.1$gam)^.5,residuals(gam.5.1$gam)) #Good
par(mfrow=(c(2,2)))
gam.check(gam.5.1$gam, old.style=T, k.rep=1000)
plot(data.Z2$Year,data.Z2$SAR)
acf(resid(gam.5.1$gam))
acf(resid(gam.5.1$lme, type = "normalized"))
pacf(resid(gam.5.1$gam))
pacf(resid(gam.5.1$lme, type = "normalized"))
gam.5.2=gamm(cbind(RunSize, Morts)~ Year + s(ChkSubyrRel, k=4) + s(CVChkSubyearRelDate, k=4) +
s(SST.Out, k=4) + s(PDO, k=4) + s(NPI, k=4) +
s(Seals, k=4),
family=binomial(link="logit"),
correlation=corAR1(value = 0.3, form = ~ Year),
data=data.Z2)
gam.5.2$gam
summary(gam.5.2$gam) #
anova(gam.5.2$lme)
plot(gam.5.2$gam, pages=1, scale=0, res=TRUE, se=T, pch=1, shade=T)
par(mfrow=(c(1,1)))
plot(fitted(gam.5.2$gam)^.5,residuals(gam.5.1$gam)) #Good
par(mfrow=(c(2,2)))
gam.check(gam.5.2$gam, old.style=T, k.rep=1000)
acf(resid(gam.5.2$gam))
acf(resid(gam.5.2$lme, type = "normalized"))
pacf(resid(gam.5.2$gam))
pacf(resid(gam.5.2$lme, type = "normalized"))
#Make predictions with best fitting gam
#Generate new data input for predictions
testdata=data.frame(Year=seq(from=min(data.Z2$Year), to=max(data.Z2$Year), by=1),
ChkSubyrRel=mean(gam.2.2$model$ChkSubyrRel),
CVChkSubyearRelDate=mean(gam.2.2$model$CVChkSubyearRelDate),
PDO=mean(gam.2.2$model$PDO),
NPI=mean(gam.2.2$model$NPI),
Seals=mean(gam.2.2$model$Seals))
#Fit and predict
fit=predict.gam(gam.2.2, type='response', se=T)
predicts = #Missing the NA's need to add in
predicts2=as.vector(c(fit$fit[1:3], NA, NA, fit$fit[4:35]))
lower=fit$fit - (1.96*fit$se.fit)
lower2=as.vector(c(lower[1:3], NA, NA, lower[4:35]))
upper=fit$fit + (1.96*fit$se.fit)
upper2=as.vector(c(upper[1:3], NA, NA, upper[4:35]))
predicts=data.frame(data.Z$Year, predicts2, lower2, upper2)
pred.2014=read.csv("2014 Pred.csv", header=T)
pred.2014=c()
#Plot
plot_gam.2.2= ggplot(aes(x=data.Z.Year,y=predicts2), data=predicts) +
#geom_ribbon(aes(ymin = lower2, ymax=upper2), fill='gray70') +
geom_line(color='#1e90ff', lwd=2) +
geom_point(aes(x=data.Z$Year, y=data.Z$SAR))+
labs(x="Year", y="SAR")
ggsave(plot_gam.2.2, filename="GAM 2.2 Predicted Values.png", bg="transparent")
geom_ribbon(aes(ymin = level - 1, ymax = level + 1), fill = "grey70") +
geom_line(aes(y = level))
#Fit and predict
fit=predict.gam(gam.5.1$gam, type='response', se=T)
predicts = #Missing the NA's need to add in
predicts2=as.vector(c(fit$fit[1:3], NA, NA, fit$fit[4:35]))
lower=fit$fit - (1.96*fit$se.fit)
lower2=as.vector(c(lower[1:3], NA, NA, lower[4:35]))
upper=fit$fit + (1.96*fit$se.fit)
upper2=as.vector(c(upper[1:3], NA, NA, upper[4:35]))
predicts=data.frame(data.Z$Year, predicts2, lower2, upper2)
#pred.2014=read.csv("2014 Pred.csv", header=T)
#pred.2014=c()
#Plot
plot_gam.5.1= ggplot(aes(x=data.Z.Year,y=predicts2), data=predicts) +
#geom_ribbon(aes(ymin = lower2, ymax=upper2), fill='gray70') +
geom_line(color='#1e90ff', lwd=2) +
geom_point(aes(x=data.Z$Year, y=data.Z$SAR))+
labs(x="Year", y="SAR")
############################### GAMs for Pools of Like Indicators #############################
##Use data.Z because it is not trucated
head(data.Z)
###### OCEAN #######
gam.PDO=gam(cbind(RunSize, Morts) ~ Year + s(PDO),
family=binomial(link="logit"), data=data.Z)
summary(gam.PDO)
anova(gam.PDO)
plot(gam.PDO,pages=1, se=T,res=T,pch=1)
par(mfrow=c(2,2))
gam.check(gam.PDO)
par(mfrow=c(1,1))
plot(data.Z$Year, data.Z$PDO, typ="l")
lines(data.Z$Year, data.Z$PDO.Out, col="blue")
correlation = corAR1()
gam.NPGO=gam(cbind(RunSize, Morts) ~ s(Year, k=5) + s(NPGO) +s(PDO) +s(NPI),
family=binomial(link="logit"), method="REML", data=data.Z)
summary(gam.NPGO)
anova(gam.NPGO)
AIC(gam.NPGO)
plot(gam.NPGO,pages=1, se=T,res=T,pch=1)
par(mfrow=c(2,2))
gam.check(gam.NPGO)
gam.NPGOAR1=gamm(cbind(RunSize, Morts) ~ s(NPGO) +s(PDO) +s(NPI),
family=binomial(link="logit"), correlation = corAR1(.9, form=~1|Year), method="REML", data=data.Z)
summary(gam.NPGOAR1)
anova(gam.NPGOAR1)
AIC(gam.NPGOAR1)
plot(gam.NPGOAR1,pages=1, se=T,res=T,pch=1)
par(mfrow=c(2,2))
gam.check(gam.NPGOAR1)
anova(gam.NPGOAR1$lme)
gam.UPW=gam(cbind(RunSize, Morts) ~ Year + s(UPW, k=6),
family=binomial(link="logit"), data=data.Z)
summary(gam.UPW)
anova(gam.UPW)
plot(gam.UPW,pages=1, se=T,res=T,pch=1)
par(mfrow=c(2,2))
gam.check(gam.UPW)
par(mfrow=c(1,1))
plot(data.Z$SAR, data.Z$UPW, typ="p")
lines(data.Z$Year, data.Z$PDO.Out, col="blue")
gam.ocean=gam(cbind(RunSize, Morts)~ Year + s(NPGO, k=5) + s(NPI, k=5) +
s(UPW, k=5) + s(MEI, k=5), family=binomial(link="logit"), data=data.Z)
summary(gam.ocean) #UBRE=1031.8, Dev.=83.2%
plot(gam.ocean,pages=1, se=T,res=T,pch=1) #Pretty flat, UPW has one point that drags the upper end down; wouldn't rely on this
par(mfrow=c(2,2))
gam.check(gam.ocean)
##############  FLOW  ###########################
gam.flow=gam(cbind(RunSize, Morts)~ Year + s(MaxFlow, k=6) + s(SpringFlow, k=6) +
s(JD.50Per.Cum, k=6) +s(JD.75Per.Cum, k=6) + s(Dur.25to75.Per, k=6),
family=binomial(link="logit"), data=data.Z)
summary(gam.flow) #UBRE=498.87, Dev=91.9%
anova(gam.flow)
plot(gam.flow,pages=1, se=T,res=T,pch=1)
par(mfrow=c(2,2))
gam.check(gam.flow)
gam.flow2=gam(cbind(RunSize, Morts)~ Year + s(MaxFlow, k=6) + s(SpringFlow, k=6) +
s(JD.50Per.Cum, k=6),
family=binomial(link="logit"), data=data.Z)
summary(gam.flow2) #UBRE=641.12, Dev=89.6%
anova(gam.flow2)
plot(gam.flow2,pages=1, se=T,res=T,pch=1)
par(mfrow=c(2,2))
gam.check(gam.flow2)
#SAR seems to be higher at higher spring flow and lower when the date at cum. flow is earliest
par(mfrow=c(1,1))
plot(data.Z$SAR, data.Z$UPW, typ="p")
lines(data.Z$Year, data.Z$PDO.Out, col="blue")
############## HATCHERIES ########################
gam.hatch=gam(cbind(RunSize, Morts)~ Year + s(Hatch.Out, k=6) + s(ChkSubyrRel, k=6) +
s(ChkSubyearRelDate, k=6) + s(CVChkSubyearRelDate, k=6),
family=binomial(link="logit"), data=data.Z)
summary(gam.hatch) #UBRE=509.24, Dev=91.7%
anova(gam.hatch)
plot(gam.hatch,pages=1, se=T,res=T,pch=1)
par(mfrow=c(2,2))
gam.check(gam.hatch)
#Tried with both Hatch.Out and ChkSubyrRel and Hatch.Out has much less explanatory power
gam.hatch2=gam(cbind(RunSize, Morts)~ Year + s(ChkSubyrRel, k=6) +
s(ChkSubyearRelDate, k=6) + s(CVChkSubyearRelDate, k=6),
family=binomial(link="logit"), data=data.Z)
summary(gam.hatch2) #UBRE=629.72, Dev=89.8%
anova(gam.hatch2)
plot(gam.hatch2,pages=1, se=T,res=T,pch=1)
par(mfrow=c(2,2))
gam.check(gam.hatch2)
#ChkSubyrRel abundance shows pretty strong neg. correlation with SAR
#Some indication that later release date has stronger negative effect on SAR, but just for the very late dates
gam.hatchCV=gam(cbind(RunSize, Morts)~ Year + s(CVChkSubyearRelDate, k=8),
family=binomial(link="logit"), data=data.Z)
summary(gam.hatchCV) #UBRE=1660, Dev=73%
anova(gam.hatchCV)
plot(gam.hatchCV,pages=1, se=T,res=T,pch=1)
#NOt linear at all, bounces around
gam.hatchYR=gam(cbind(RunSize, Morts)~ Year + s(ChkYrHatchRelDate, k=8),
family=binomial(link="logit"), data=data.Z)
summary(gam.hatchYR) #UBRE=1622.2, Dev=73.7%
anova(gam.hatchYR)
plot(gam.hatchYR,pages=1, se=T,res=T,pch=1)
#NOt linear at all, bounces around
gam.hatchSYRD=gam(cbind(RunSize, Morts)~ Year + s(ChkSubyearRelDate, k=8),
family=binomial(link="logit"), data=data.Z)
summary(gam.hatchSYRD) #UBRE=1800, Dev=70.8%
anova(gam.hatchSYRD)
plot(gam.hatchSYRD,pages=1, se=T,res=T,pch=1)
#NOt linear at all, bounces around
#CV, YR, and SYRD are all not that great of predictors: no real relationship, no obvious threshold
#Best is subyr rel.
############## SEALS, ORCAS, POP.  ################
gam.bigthings=gam(cbind(RunSize, Morts)~ Year +s(Seals) + s(Orcas) +
s(Population), family=binomial(link="logit"), data=data.Z)
summary(gam.bigthings) #UBRE 71.689, Dev.=98.8%
anova(gam.bigthings)
plot(gam.bigthings,pages=1, se=T,res=T,pch=1) #Some of these look like linear predictors, but the edfs are 3-4
par(mfrow=c(2,2))
gam.check(gam.bigthings) #Resids look good
#This grouping def. has the lowest UBRE value
gam.seals=gam(cbind(RunSize, Morts)~ Year +s(Seals),
family=binomial(link="logit"), data=data.Z)
summary(gam.seals) #UBRE 842.15, Dev.=86.3%
anova(gam.seals)
plot(gam.seals,pages=1, se=T,res=T,pch=1) #Some of these look like linear predictors, but the edfs are 3-4
par(mfrow=c(2,2))
gam.check(gam.seals) #Resids look good
#Negative rel. between seals and SAR
gam.peeps=gam(cbind(RunSize, Morts)~ Year +s(Population),
family=binomial(link="logit"), data=data.Z)
summary(gam.peeps) #UBRE 825.7, Dev.=86.6%
anova(gam.peeps)
plot(gam.peeps,pages=1, se=T,res=T,pch=1) #Some of these look like linear predictors, but the edfs are 3-4
par(mfrow=c(2,2))
gam.check(gam.peeps) #Resids look good, qq plot a little funny and resids aren't super normal
#Strong corrleation from year to year
#Negative rel. between pop and SAR? SAR higher at high Pop--this is counterintuitive
gam.orca=gam(cbind(RunSize, Morts)~ Year +s(Orcas),
family=binomial(link="logit"), data=data.Z)
summary(gam.orca) #UBRE 1198.7, Dev.=80.5%--not that great
anova(gam.orca)
plot(gam.orca,pages=1, se=T,res=T,pch=1) #Some of these look like linear predictors, but the edfs are 3-4
par(mfrow=c(2,2))
gam.check(gam.orca) #Resids look good
#Orcas don't seem to be the strongest contender
gam.bait=gam(cbind(RunSize, Morts)~ Year +s(Herring),
family=binomial(link="logit"), data=data.Z)
summary(gam.bait) #UBRE 1239.7, Dev.79.9%--not that great
anova(gam.bait)
plot(gam.bait,pages=1, se=T,res=T,pch=1) #Some of these look like linear predictors, but the edfs are 3-4
par(mfrow=c(2,2))
gam.check(gam.bait) #Resids look good
#Highest SAR is at lowest value of herring but very few data points at this end--could just be a blip
par(mfrow=c(1,1))
plot(logit(data.Z$SAR), data.Z$Herring)
#Not as bad in logit space with the plot, but it is really a scattershot
plot(gam.1,pages=1, se=T,res=T,pch=1) #Positive response with Hatch.Out, non-linear response with UPW, and neutral on others.
par(mfrow=(c(1,1)))
plot(fitted(gam.1)^.5,residuals(gam.1)) #Good
qq.gam(gam.1)  #Good
gam.check(gam.1)
gam.2.2.5=gam(cbind(RunSize, Morts)~ Year + s(CVChkSubyearRelDate, k=4) + s(SST.Out, k=4) + s(PDO, k=4) +
s(NPI, k=4) + s(Seals, k=4),
family=binomial(link="logit"), data=data.Z2)
summary(gam.2.2.5) #UBRE = 1007.7, Dev, exp=83.6%
anova(gam.2.2.5)
plot(gam.2.2.5, pages=1, res=TRUE, se=T, pch=1, scale=0, shade=T)
par(mfrow=(c(1,1)))
plot(fitted(gam.2.2.5)^.5,residuals(gam.2.2.5)) #Good
par(mfrow=(c(2,2)))
gam.check(gam.2.2.5, old.style=T, k.rep=1000)
AIC(gam.2.2.5)
concurvity(gam.2.2.5)
gam.2.3=gam(cbind(RunSize, Morts)~ Year + s(ChkSubyrRel, k=4) + s(CVChkSubyearRelDate, k=3) +
s(SST.Out, k=4) + s(PDO, k=4) + s(NPI, k=4) +
Seals,
family=binomial(link="logit"), data=data.Z2)
summary(gam.2.3) #UBRE = 861.53, Dev, exp=86%
anova(gam.2.3)
plot(gam.2.3, pages=1, res=TRUE, se=T, pch=1, scale=0, shade=T)
AIC(gam.2.3)
gam.2.4=gam(cbind(RunSize, Morts)~ Year + s(ChkSubyrRel, k=4) + s(CVChkSubyearRelDate, k=3) +
s(SST.Out, k=4) +  s(NPI, k=4) +
Seals,
family=binomial(link="logit"), data=data.Z2)
summary(gam.2.4) #UBRE = 955.4, Dev. exp=84.5%
anova(gam.2.4)
plot(gam.2.4, pages=1, res=TRUE, se=T, pch=1, scale=0, shade=T)
par(mfrow=(c(1,1)))
plot(fitted(gam.2.4)^.5,residuals(gam.2.4)) #Good
plot(gam.2.4, pages=1, res=TRUE, se=T, pch=1, scale=0, shade=T)
gam.2.4=gam(cbind(RunSize, Morts)~ Year + s(ChkSubyrRel, k=4) + s(CVChkSubyearRelDate, k=3) +
s(SST.Out, k=4) +  s(NPI, k=4) +
s(Seals),
family=binomial(link="logit"), data=data.Z2)
summary(gam.2.4) #UBRE = 1004.6, Dev. exp=83.7%
anova(gam.2.4)
plot(gam.2.4, pages=1, res=TRUE, se=T, pch=1, scale=0, shade=T)
par(mfrow=(c(1,1)))
plot(gam.2.4, pages=1, res=TRUE, se=T, pch=1, scale=0, shade=T)
par(mfrow=(c(1,1)))
plot(fitted(gam.2.4)^.5,residuals(gam.2.4)) #Good
par(mfrow=(c(2,2)))
gam.check(gam.2.4, old.style=T, k.rep=1000)
AIC(gam.2.4)
anova.gam(gam.2.1, gam.2.2, gam.2.3, gam.2.4)
gam.1=gam(cbind(RunSize, Morts)~ Year + s(ChkSubyrRel, k=4) +  s(SST.Out, k=4) +
s(PDO, k=4) + s(NPI, k=4) + s(Seals, k=4),
family=binomial(link="logit"), data=data.Z2)
summary(gam.1) #UBRE = 820.9, Dev. exp=86.7%
summary(gam.1) #UBRE = 1061.6, Dev. exp=82.8%
anova(gam.1)
plot(gam.1, pages=1, res=TRUE, se=T, pch=1, scale=0, shade=T)
par(mfrow=(c(1,1)))
plot(fitted(gam.1)^.5,residuals(gam.1)) #Good
gam.check(gam.1, k.rep=1000)
AIC(gam.1)
gam.2.2=gam(cbind(RunSize, Morts)~ Year + s(ChkSubyrRel, k=4) + s(CVChkSubyearRelDate, k=4) +
s(SST.Out, k=4) + s(PDO, k=4) + s(NPI, k=4) +
s(Seals, k=4), method="GCV.Cp",
family=binomial(link="logit"), data=data.Z2)
summary(gam.2.2) #UBRE = 850.1, Dev, exp=86.2%
anova(gam.2.2)
plot(gam.2.2, pages=1, res=TRUE, se=T, pch=1, scale=0, shade=T)
par(mfrow=(c(1,1)))
plot(data.Z2$Year[-(4:5)],residuals(gam.2.2)) #Good
plot(fitted(gam.2.2)^.5,residuals(gam.2.2)) #Good
par(mfrow=(c(2,2)))
gam.2.2.5=gam(cbind(RunSize, Morts)~ Year + s(CVChkSubyearRelDate, k=4) + s(SST.Out, k=4) + s(PDO, k=4) +
s(NPI, k=4) + s(Seals, k=4),
family=binomial(link="logit"), data=data.Z2)
summary(gam.2.2.5) #UBRE = 919.53, Dev, exp=85.1%
anova(gam.2.2.5)
plot(gam.2.2.5, pages=1, res=TRUE, se=T, pch=1, scale=0, shade=T)
par(mfrow=(c(1,1)))
plot(fitted(gam.2.2.5)^.5,residuals(gam.2.2.5)) #Good
par(mfrow=(c(2,2)))
gam.check(gam.2.2.5, old.style=T, k.rep=1000)
AIC(gam.2.2.5)
gam.2.3.5=gam(cbind(RunSize, Morts)~ Year + s(ChkSubyrRel, k=4) + s(CVChkSubyearRelDate, k=3) +
s(SST.Out, k=4) + s(PDO, k=4) + s(NPI, k=4),
family=binomial(link="logit"), data=data.Z2)
summary(gam.2.3.5) #UBRE = 955.4, Dev. exp=84.5%
anova(gam.2.3.5)
plot(gam.2.3.5, pages=1, res=TRUE, se=T, pch=1, scale=0, shade=T)
par(mfrow=(c(1,1)))
plot(fitted(gam.2.3.5)^.5,residuals(gam.2.3.5)) #Good
par(mfrow=(c(2,2)))
gam.check(gam.2.3.5, old.style=T, k.rep=1000)
AIC(gam.2.3.5)
gam.2.4=gam(cbind(RunSize, Morts)~ Year + s(ChkSubyrRel, k=4) + s(CVChkSubyearRelDate, k=3) +
s(SST.Out, k=4) +  s(NPI, k=4) +
s(Seals),
family=binomial(link="logit"), data=data.Z2)
summary(gam.2.4) #UBRE = 812.98, Dev. exp=86.8%
anova(gam.2.4)
plot(gam.2.4, pages=1, res=TRUE, se=T, pch=1, scale=0, shade=T)
anova.gam(gam.2.1, gam.2.2, gam.2.3, gam.2.4)
gam.2.4=gam(cbind(RunSize, Morts)~ Year + s(ChkSubyrRel, k=4) + s(CVChkSubyearRelDate, k=4) +
s(SST.Out, k=4) +  s(NPI, k=4) +
s(Seals),
family=binomial(link="logit"), data=data.Z2)
summary(gam.2.4) #UBRE = 812.98, Dev. exp=86.8%
anova(gam.2.4)
plot(gam.2.4, pages=1, res=TRUE, se=T, pch=1, scale=0, shade=T)
par(mfrow=(c(1,1)))
setwd("C:\\Users\\Kathryn.Sobocinski\\Documents\\SSMSP\\QNA")
library(XML)
library(tcltk2)
library(QPress)
library(plyr)
library(dplyr)
library(ggplot2)
library(reshape2)
library(gridExtra)
#library(igraph)
ss=model.dia("SSv7.5 MicroZoo.dia")
ss
simSS <- system.simulate(10000, ss)
simSS$total
impact.barplot(simSS)
impact.barplot=function (sim, epsilon = 1e-05, main = "", cex.axis = 1)
{
print("hello")
edges <- sim$edges
As <- sim$A
nodes <- node.labels(edges)
action <- function(perturb, monitor, edges, check, slider) {
impact.barplot.action(nodes, As, perturb, monitor, epsilon = epsilon,
main =main , cex.axis = cex.axis)
#print(As)
print(nodes)
}
interactive.selection(action, nodes, perturb = T, monitor = T)
}
#main="Anthropogenic Impacts"
# impact.barplot.action
impact.barplot.action <- function (nodes, As, perturb, monitor, epsilon = 1e-05, main = "",
cex.axis = 1)
{
#pal <- c("#92C5DE", "#808080", "#F4A582")
pal <- c("firebrick4", "gray", "lightblue")
results <- matrix(0, length(nodes), 3)
for (i in 1:length(As)) {
impact <- signum(drop(As[[i]] %*% perturb), epsilon = epsilon)
if (all(monitor == impact, na.rm = T)) {
results <- results + outer(impact, -1:1, "==")
print(results)
}
}
rownames(results) <- nodes
lwidth <- max(strwidth(nodes, units = "inches", cex = cex.axis))
opar <- par(mai = c(1, lwidth + 0.2, 0.4, 0.4) + 0.2)
barplot(t(results), horiz = T, las = 1, border = F, col = pal,
xlab = "Simulations", main = main, cex.axis = cex.axis)
par(opar)
print(results)
}
# interactive.selection
interactive.selection=function (action, nodes, edges = NULL, slider = NULL, checkbox = NULL,
perturb = T, monitor = T)
{
tk.top <- tktoplevel()
tktitle(tk.top) <- "Node Selector"
label <- T
w.perturb <- if (perturb)
radiogrid(tk.top, "Perturb", nodes, c(`-` = -1, `0` = 0,
`+` = 1), initial = 2, label.rows = label && !(label <- F))
w.monitor <- if (monitor)
radiogrid(tk.top, "Monitor", nodes, c(`-` = -1, `0` = 0,
`+` = 1, `?` = NA), initial = 4, label.rows = label &&
!(label <- F))
w.edges <- if (!is.null(edges))
checkedges(tk.top, "Edges", nodes, edges, label.rows = label &&
!(label <- F))
w.checkbox <- if (!is.null(checkbox))
checkbox(tk.top, checkbox, 0)
w.slider <- if (!is.null(slider))
slider(tk.top, slider$initial, slider$to, slider$from)
update <- function() {
action(perturb = if (!is.null(w.perturb))
w.perturb$selected(), monitor = if (!is.null(w.monitor))
w.monitor$selected(), edges = if (!is.null(w.edges))
w.edges$selected(), check = if (!is.null(w.checkbox))
w.checkbox$selected(), slider = if (!is.null(w.slider))
w.slider$selected())
Sys.sleep(0.1)
tkfocus(tk.top)
}
close <- function() {
tkdestroy(tk.top)
}
col <- -1
if (!is.null(w.perturb))
tkgrid(w.perturb$window, padx = 2, pady = 2, row = 0,
column = (col <- col + 1), sticky = "n")
if (!is.null(w.monitor))
tkgrid(w.monitor$window, padx = 2, pady = 2, row = 0,
column = (col <- col + 1), sticky = "n")
if (!is.null(w.edges))
tkgrid(w.edges$window, padx = 2, pady = 2, row = 0,
column = (col <- col + 1), sticky = "n")
tk.frame <- tkframe(tk.top)
tkgrid(tk2button(tk.frame, text = "Update", command = update),
tk2button(tk.frame, text = "Close", command = close))
tkgrid(tk.frame, if (!is.null(w.checkbox))
w.checkbox$window, if (!is.null(w.slider))
w.slider$window)
tkfocus(tk.top)
}
# radiogrid
radiogrid=function (parent, label, rows, choices, initial = 1, label.rows = T)
{
if (is.null(names(choices)))
names(choices) <- as.character(choices)
initial <- rep(initial, length = length(rows))
state <- lapply(initial, function(k) tclVar(names(choices)[k]))
names(state) <- rows
tk.frame <- tk2labelframe(parent, text = label)
for (col in seq_along(choices)) tkgrid(tk2label(tk.frame,
text = names(choices)[col]), row = 0, column = col)
for (row in seq_along(rows)) {
tkgrid(tk2label(tk.frame, text = if (label.rows)
rows[row]
else ""), row = row, column = 0, sticky = "w")
for (col in seq_along(choices)) tkgrid(tk2radiobutton(tk.frame,
value = names(choices)[col], variable = state[[row]]),
row = row, column = col)
}
r <- list(window = tk.frame, selected = function() {
r <- choices[sapply(state, tclvalue)]
names(r) <- rows
r
}, state = state, choices = choices)
class(r) <- "radiogrid"
r
}
#System.simulate
system.simulate=function (n.sims, edges, required.groups = c(0), validators = NULL)
{
As <- vector("list", n.sims)
ws <- matrix(0, n.sims, nrow(edges))
s <- community.sampler(edges, required.groups)
total <- 0
stable <- 0
accepted <- 0
while (accepted < n.sims) {
total <- total + 1
z <- s$select(rnorm(1,0,2))
W <- s$community()
if (!stable.community(W))
next
stable <- stable + 1
if (!all(as.logical(lapply(validators, function(v) v(W)))))
next
accepted <- accepted + 1
As[[accepted]] <- -solve(W)
ws[accepted, ] <- s$weights(W)
}
colnames(ws) <- s$weight.labels
list(edges = edges, A = As, w = ws, total = total, stable = stable,
accepted = accepted)
}
impact.barplot(simSS)
impact.barplot(simSS)
simSS$edges
head(simSS$w)
tail(simSS$w)
mean(abs(simSS$w))#0.503, no update with mo
edges <- simSS$edges
As <- simSS$A
nodes <- node.labels(edges)
monitor <- c(rep(NA,length(nodes))) ## Don't enforce any required responses
edges
As
nodes <- node.labels(edges)
nodes
View(QPress:::system.simulate)
View(QPress:::system.simulate)
