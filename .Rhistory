getwd
getwd()
#load libraries
library(readr)
library(tidyverse)
library(here)
library(patchwork)
library(igra)
library(igraph)
library(ggraph)
library(readxl)
#load data
edges <- read_excel(here("data/QNMEdges"))
#load data
edges <- read_excel(here("data/QNMEdges.xlsx"))
View(edges)
nodes <- read_excel(here("data/QNMAttributes.xlsx"))
View(nodes)
nodes <- read_excel(here("data/QNMNodes.xlsx"))
View(nodes)
e <- graph.edgelist(as.matrix(edges), directed = T)
?select
select
??select
#create network
test <- edges %>%
select(c('to', 'from'))
#create network
test <- edges %>%
select(to)
#create network
test <- select(edges, c(to, from))
#create network
test <- select(edges, c(node1, node2))
View(test)
#create network
edges1 <- select(edges, c(node1, node2))
e <- graph.edgelist(as.matrix(edges1), directed = T)
plot(e)
ggraph(e)+
geom_edge_link()+
geom_node_point()
ggraph(e)+
geom_edge_link()+
geom_node_point()+
geom_node_text(aes(label=name))
ggraph(e)+
geom_edge_arc()+
geom_node_point()+
geom_node_text(aes(label=name))
ggraph(e)+
geom_edge_arc0()+
geom_node_point()+
geom_node_text(aes(label=name))
ggraph(e)+
geom_edge_arc2()+
geom_node_point()+
geom_node_text(aes(label=name))
ggraph(e)+
geom_edge_bend()+
geom_node_point()+
geom_node_text(aes(label=name))
#load data
edges <- read_excel(here("data/QNMEdges.xlsx"))
nodes <- read_excel(here("data/QNMNodes.xlsx"))
#create network
edges1 <- select(edges, c(node1, node2))
#create network
edges1 <- select(edges, c(from, to))
e <- graph.edgelist(as.matrix(edges1), directed = T)
plot(e)
ggraph(e)+
geom_edge_bend()+
geom_node_point()+
geom_node_text(aes(label=name))
ggraph(e)+
geom_edge_link()+
geom_node_point()+
geom_node_text(aes(label=name))
network <- graph_from_data_frame(d = edges, vertices = nodes, directed = T)
#load data
edges <- read_excel(here("data/QNMEdges.xlsx"))
nodes <- read_excel(here("data/QNMNodes.xlsx"))
network <- graph_from_data_frame(d = edges, vertices = nodes, directed = T)
#load data
edges <- read_excel(here("data/QNMEdges.xlsx"))
nodes <- read_excel(here("data/QNMNodes.xlsx"))
network <- graph_from_data_frame(d = edges, vertices = nodes, directed = T)
View(edges)
View(nodes)
unique(edges$from)
unique(edges$to)
unique(nodes$nodes)
length(unique(edges$from))
length(unique(edges$to))
length(unique(nodes$nodes))
#load data
edges <- read_excel(here("data/QNMEdges.xlsx"))
nodes <- read_excel(here("data/QNMNodes.xlsx"))
network <- graph_from_data_frame(d = edges, vertices = nodes, directed = T)
#load data
edges <- read_excel(here("data/QNMEdges.xlsx"))
nodes <- read_excel(here("data/QNMNodes.xlsx"))
network <- graph_from_data_frame(d = edges, vertices = nodes, directed = T)
#load data
edges <- read_excel(here("data/QNMEdges.xlsx"))
nodes <- read_excel(here("data/QNMNodes.xlsx"))
network <- graph_from_data_frame(d = edges, vertices = nodes, directed = T)
#create network
edges1 <- select(edges, c(from, to))
network <- graph_from_data_frame(d = edges1, vertices = nodes, directed = T)
length(unique(edges$from))
length(unique(edges$to))
length(unique(nodes$nodes))
#load data
edges <- read_excel(here("data/QNMEdges.xlsx"))
nodes <- read_excel(here("data/QNMNodes.xlsx"))
network <- graph_from_data_frame(d = edges1, vertices = nodes, directed = T)
length(unique(edges$from))
length(unique(edges$to))
length(unique(nodes$nodes))
e <- graph.edgelist(as.matrix(edges1), directed = T)
plot(e)
ggraph(e)+
geom_edge_link()+
geom_node_point()+
geom_node_text(aes(label=name))
#load data
edges <- read_excel(here("data/QNMEdges.xlsx"))
nodes <- read_excel(here("data/QNMNodes.xlsx"))
test<- merge(edges, nodes, by = from)
test<- merge(edges, nodes, by = 'from')
View(test)
unique(test$from)
network <- graph_from_data_frame(d = edges1, vertices = nodes, directed = F)
network <- graph_from_data_frame(d = edges, vertices = nodes, directed = F)
#load data
edges <- read_excel(here("data/QNMEdges.xlsx"))
nodes <- read_excel(here("data/QNMNodes.xlsx"))
network <- graph_from_data_frame(d = edges, vertices = nodes, directed = F)
network <- graph_from_data_frame(d = edges, vertices = nodes, directed = F)
#load data
edges <- read_excel(here("data/QNMEdges.xlsx"))
nodes <- read_excel(here("data/QNMNodes.xlsx"))
network <- graph_from_data_frame(d = edges, vertices = nodes, directed = F)
#load data
edges <- read_excel(here("data/QNMEdges.xlsx"))
network <- graph_from_data_frame(d = edges, vertices = nodes, directed = F)
#create network
edges1 <- select(edges, c(name, to))
network <- graph_from_data_frame(d = edges1, vertices = nodes, directed = F)
a<- unique(nodes$name)
b<-(unique(edges$name)
b<-unique(edges$name)
b<-unique(edges$name)
c <-c(a,b)
c<-unique(c)
view(c)
#load data
edges <- read_excel(here("data/QNMEdges.xlsx"))
nodes <- read_excel(here("data/QNMNodes.xlsx"))
network <- graph_from_data_frame(d = edges1, vertices = nodes, directed = F)
b<-unique(edges$to)
a<- unique(nodes$name)
c <-c(a,b)
c<-unique(c)
view(c)
#load data
edges <- read_excel(here("data/QNMEdges.xlsx"))
nodes <- read_excel(here("data/QNMNodes.xlsx"))
network <- graph_from_data_frame(d = edges1, vertices = nodes, directed = F)
b<-unique(edges$to)
a<- unique(nodes$name)
c <-c(a,b)
c<-unique(c)
network <- graph_from_data_frame(d = edges1, vertices = nodes, directed = F)
network <- graph_from_data_frame(d = edges, vertices = nodes, directed = F)
#load data
edges <- read_excel(here("data/QNMEdges.xlsx"))
nodes <- read_excel(here("data/QNMNodes.xlsx"))
network <- graph_from_data_frame(d = edges, vertices = nodes, directed = F)
network <- graph_from_data_frame(d = edges, vertices = nodes, directed = T)
#ggraph
ggraph(network, layout = "tree") +
geom_edge_link(aes(color = relation)) +
geom_node_point() +
geom_node_text(aes(label = name), vjust = "outward")
#ggraph
ggraph(network) +
geom_edge_link(aes(color = relation)) +
geom_node_point() +
geom_node_text(aes(label = name), vjust = "outward")
#ggraph
ggraph(network) +
geom_edge_link(aes(color = relation)) +
geom_node_point() +
geom_node_text(aes(label = name), vjust = "outward")+
theme_void()
#ggraph
ggraph(network, layout = "dendrogram") +
geom_edge_link(aes(color = relation)) +
geom_node_point() +
geom_node_text(aes(label = name), vjust = "outward")+
theme_void()
#ggraph
ggraph(network) +
geom_edge_link(aes(color = relation)) +
geom_node_point() +
geom_node_text(aes(label = name), vjust = "outward")+
theme_void()
??ggraph
#ggraph
ggraph(network, layout = 'fr') +
geom_edge_link(aes(color = relation)) +
geom_node_point() +
geom_node_text(aes(label = name), vjust = "outward")+
theme_void()
#ggraph
ggraph(network, layout = 'kk') +
geom_edge_link(aes(color = relation)) +
geom_node_point() +
geom_node_text(aes(label = name), vjust = "outward")+
theme_void()
#ggraph
ggraph(network, layout = 'eigen') +
geom_edge_link(aes(color = relation)) +
geom_node_point() +
geom_node_text(aes(label = name), vjust = "outward")+
theme_void()
#ggraph
ggraph(network, layout = 'linear')+
geom_edge_arc(aes(color = relation)) +
geom_node_point() +
geom_node_text(aes(label = name), vjust = "outward")+
theme_void()
#ggraph
ggraph(network)+
geom_edge_arc(aes(color = relation)) +
geom_node_point() +
geom_node_text(aes(label = name), vjust = "outward")+
theme_void()
#ggraph
ggraph(network, layout = 'circular')+
geom_edge_arc(aes(color = relation)) +
geom_node_point() +
geom_node_text(aes(label = name), vjust = "outward")+
theme_void()
#ggraph
ggraph(network, layout = 'linear', circular = T)+
geom_edge_arc(aes(color = relation)) +
geom_node_point() +
geom_node_text(aes(label = name), vjust = "outward")+
theme_void()
ggraph(network, layout = 'dendrogram', circular = T)+
geom_edge_elbow()+
coord_fixed()+
geom_node_text(aes(label = name), vjust = "outward")+
theme_void()
#ggraph
ggraph(network, layout = 'linear', circular = T)+
geom_edge_elbow(aes(color = relation)) +
geom_node_point() +
geom_node_text(aes(label = name), vjust = "outward")+
theme_void()
#ggraph
ggraph(network, layout = 'linear', circular = T)+
geom_edge_arc(aes(color = relation)) +
geom_node_point() +
geom_node_text(aes(label = name), vjust = "outward")+
theme_void()
ggraph(network, layout = 'linear', circular = T)+
geom_edge_arc(aes(color = relation)) +
geom_node_text(aes(label = name), vjust = "outward")+
theme_void()
ggraph(network, layout = 'linear', circular = T)+
geom_edge_arc(aes(color = relation)) +
geom_node_point() +
geom_node_text(aes(label = name), vjust = "outward")+
theme_void()
#ggraph
ggraph(network)+
geom_edge_arc(aes(color = relation)) +
geom_node_point() +
geom_node_text(aes(label = name), vjust = "outward")+
theme_void()
#ggraph
ggraph(network)+
geom_edge_bend0(aes(color = relation)) +
geom_node_point() +
geom_node_text(aes(label = name), vjust = "outward")+
theme_void()
#ggraph
ggraph(network)+
geom_edge_line(aes(color = relation)) +
geom_node_point() +
geom_node_text(aes(label = name), vjust = "outward")+
theme_void()
#ggraph
ggraph(network)+
geom_edge_fan(aes(color = relation)) +
geom_node_point() +
geom_node_text(aes(label = name), vjust = "outward")+
theme_void()
#ggraph
ggraph(network)+
geom_edge_fan0(aes(color = relation)) +
geom_node_point() +
geom_node_text(aes(label = name), vjust = "outward")+
theme_void()
install.packages(
"arcgis",
repos = c("https://r-arcgis.r-universe.dev", "https://cloud.r-project.org")
)
# Load Libraries
library(arcgis)
test <- arc_open("https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/USA_Counties_Generalized_Boundaries/FeatureServer/0")
test2 <- arc_select(test)
View(test2)
ggplot()+
geom_sf(data = test2)
library(tidyverse)
ggplot()+
geom_sf(data = test2)
shiny::runApp()
runApp()
lwgeom
?lwgeom
??lwgeom
shiny::runApp()
runApp()
runApp()
library(tidyverse)
library(sf)
library(leaflet)
library(terra)
#TEMPORARY method: load data
#elevation <- rast("data/elevation/cgelevation.tif")
elevation <- rast("data/large_files_ignore/2009snohomish_river_estuary.gdb")
elevation_df <- as.data.frame(elevation, xy = T)
st_crs(elevation)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#TEMPORARY method: load data
#elevation <- rast("data/elevation/cgelevation.tif")
lidar <- rast("data/large_files_ignore/2009snohomish_river_estuary.gdb",
lyrs = "snohomishriverestuary_be")
lidar <- st_transform(lidar, crs = st_crs(site))
lidar <- rast("data/large_files_ignore/2009snohomish_river_estuary.gdb",
lyrs = "snohomishriverestuary_be")
st_crs(lidar)
st_crs(site)
# Unify CRS
site <- st_transform(site, crs = st_crs(lidar))
runApp()
runApp()
runApp()
runApp()
#TEMPORARY method: load data
#elevation <- rast("data/elevation/cgelevation.tif")
lidar <- rast("data/large_files_ignore/2009snohomish_river_estuary.gdb",
lyrs = "snohomishriverestuary_be")
footprint <- read_sf("data/CedarGroveMitigation")
footprint <- st_transform(site, crs = st_crs(lidar))
#TEMPORARY method: load data
#elevation <- rast("data/elevation/cgelevation.tif")
lidar <- rast("data/large_files_ignore/2009snohomish_river_estuary.gdb",
lyrs = "snohomishriverestuary_be")
footprint <- read_sf("data/CedarGroveMitigation")
footprint <- st_transform(site, crs = st_crs(lidar))
elevation <- crop(lidar, footprint, mask = T)
plot(elevation)
runApp()
slider <- c(1,2)
slider[1]
slider[2]
slider <- c(3,5)
slider[2]
slider[]1
slider[1]
runApp()
runApp()
View(elevation)
elevation <- as.data.frame(crop(lidar, footprint, mask = T), xy = T)
elevation <- crop(lidar, footprint, mask = T)
elevation_df <- as.data.frame(elevation, xy = T)
plot(elevation_df)
